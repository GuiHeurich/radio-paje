
name: Build and Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build ARM64 Release via Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 1: Set up QEMU for multi-architecture emulation
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Build the ARM64 release inside a Docker container
      # This step builds the release and exports the final tarball to the local filesystem.
      - name: Build ARM64 release
        uses: docker/build-push-action@v5
        with:
          context: .
          # We are building for linux/arm64 (the architecture of Graviton instances)
          platforms: linux/arm64
          # We're telling Docker to output the result as a local tarball
          # in a directory named 'release-output'
          outputs:
            - type=local,dest=release-output

      # Step 4: Upload the cross-compiled release artifact
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: radio-backend-release
          path: release-output/radio_backend-release.tar.gz

  deploy:
    name: Deploy to EC2
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: Production

    steps:
      - name: Download release artifact
        uses: actions/download-artifact@v4
        with:
          name: radio-backend-release

      - name: Copy release to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "*.tar.gz"
          target: "/tmp"

      - name: Deploy and Restart on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo rm -rf /var/www/radio_backend/*
            sudo mkdir -p /var/www/radio_backend
            sudo chown ${{ secrets.SSH_USERNAME }}:${{ secrets.SSH_USERNAME }} /var/www/radio_backend
            
            sudo tar -xzf /tmp/*.tar.gz -C /var/www/radio_backend/
            rm /tmp/*.tar.gz
            
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > /tmp/prod.env
            echo "SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }}" >> /tmp/prod.env
            echo "PHX_HOST=${{ secrets.PHX_HOST }}" >> /tmp/prod.env
            
            set -a; source /tmp/prod.env; set +a
            /var/www/radio_backend/bin/radio_backend eval "RadioBackend.Release.migrate"
            rm /tmp/prod.env

            sudo systemctl restart radio_backend