version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20 # Specify a recent Node.js version
    commands:
      # Install Elixir and Erlang. We'll use asdf, a common version manager.
      - echo "Installing asdf for Elixir and Erlang management..."
      - git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0
      - . ~/.asdf/asdf.sh
      - asdf plugin add erlang
      - asdf plugin add elixir
      - asdf install erlang 27.3.4
      - asdf install elixir 1.18.4-otp27
      - asdf global erlang 27.3.4
      - asdf global elixir 1.18.4-otp-27

  pre_build:
    commands:
      - echo "Installing application dependencies..."
      - mix local.rebar --force
      - mix local.hex --force
      - mix deps.get --only prod
      - npm install --prefix ./assets

  build:
    commands:
      - echo "Compiling assets and building release..."
      - export MIX_ENV=prod
      - mix esbuild.install --if-missing
      - mix assets.deploy
      - mix release

  post_build:
    commands:
      - echo "Build completed on $(date)"

# Define the output of this build job
artifacts:
  files:
    # This is the release package we want to deploy
    - '_build/prod/rel/radio_backend/releases/**/*.tar.gz'
  # Discard the original source paths to keep the artifact clean
  discard-paths: yes

# Enable caching to speed up subsequent builds
cache:
  paths:
    - '/root/.npm/**/*' # Cache for npm
    - 'deps/**/*'       # Cache for Elixir deps
    - 'assets/node_modules/**/*'
